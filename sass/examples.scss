// Для тренировки синтаксиса можно использовать интерактивную площадку SassMeister: https://www.sassmeister.com/
// В редакторе VSCode есть расширение Live Sass Compiler, для компиляции SASS: https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass
// Можно воспользоваться удобным приложением Scout-App: https://scout-app.io/

// Документация SASS https://sass-lang.com/documentation
// Эстетичный Sass http://prgssr.ru/development/estetichnyj-sass-chast-1-arhitektura-i-organizaciya.html

//

// этот коммент не будет отображён в финальном файле CSS
/* этот коммент будет сохранён в финальном файле CSS */

// переменная
$accent-color: #fbbc04;

:root {
  // интерполяция переменной
  --accent-color-right: #{$accent-color};
}

// вложенность
.container {
  width: 500px;
  background-color: #fff;

  .grid {
    display: flex;

    .card {
      color: #999;
    }
  }

  .main & {
    /* main */
    outline: 1px dotted red;
  }

  > h2 {
    /* h2 */
    color: yellow;
  }
}

// =============== плейсхолдеры ===============

// если мы хотим расширить набор стилей, базовый селектор для которого не нужен

%button {
  display: inline-flex;
  border-radius: 3px;
  font-size: 16px;
  padding: 10px 20px;
  color: white;
  background-color: gray;
}

.button-success {
  @extend %button;
  background-color: green;
}

.button-error {
  @extend %button;
  background-color: red;
}

// =============== миксины ===============

@mixin text($size, $color) {
  align-text: center;
  color: $color;
  font-size: $size;
  text-decoration: underline;
}

.text-test {
  @include text(20px, red);
}
//  =>
// .text-test {
//   align-text: center;
//   color: red;
//   font-size: 20px;
//   text-decoration: underline;
// }

.text-another {
  @include text(16px, blue);
  text-decoration: none;
}
//  =>
// .text-another {
//   align-text: center;
//   color: blue;
//   font-size: 16px;
//   text-decoration: underline;
//   text-decoration: none;
// }

// =============== Директива @each ===============

// Директива @each это цикл который выполнит тело директивы для каждого значения из списка

@each $animal in dog, cat, bird, turtle {
  .#{$animal}-icon {
    background-image: url("../images/#{$animal}.png");
  }
}

// создаст
/*
.dog-icon {
  background-image: url('../images/dog.png');
}
.cat-icon {
  background-image: url('../images/cat.png');
}
.bird-icon {
  background-image: url('../images/bird.png');
}
.turtle-icon {
  background-image: url('../images/turtle.png');
}
*/

// ==================================================
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }
  #{$property}: $value;
}

.gray {
  @include prefix(transform, scaleY(50%), moz webkit qwe rty);
}
//  =>
// .gray {
//   -moz-transform: scaleY(50%);
//   -webkit-transform: scaleY(50%);
//   -qwe-transform: scaleY(50%);
//   -rty-transform: scaleY(50%);
//   transform: scaleY(50%);
// }

// =========== Карты (словари) ===================

// _colors.scss
$colors: (
  "primary": #8e3329,
  "accent": #d98328,
  "secondary": #5a1321,
  "foreground": #191919,
  "background": #e9e9e9,
);

@function getColor($key) {
  @return map-get($colors, $key);
}

// main.scss
// @import "путь/к/colors";

.button {
  color: getColor("primary");
  background-color: getColor("background");
}
